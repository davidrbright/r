x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm4), col = "yellow")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(gam1), col = "yellow")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(gam1), col = "yellow")
library(mgcv)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(gam1), col = "yellow")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm1), col = "yellow")
abline(lm2)
abline(lm1)
lines(lm2)
help("lines")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm1), col = "yellow")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm1), col = "yellow")
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^3
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm2), col = "yellow")
anova(lm1, lm2, lm3, lm4, gam1)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^4
y = rnorm(500, mu1, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm2), col = "yellow")
anova(lm1, lm2, lm3, lm4, gam1)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^4
y = rnorm(500, mu, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm2), col = "yellow")
anova(lm1, lm2, lm3, lm4, gam1)
set.seed(123)
x = runif(500)
mu = sin(2*(4*x-2)) + 2*exp(-(16^2)*((x-.5)^2))
mu1 = x^4
y = rnorm(500, mu, .3)
d = data.frame(x,y)
plot(d)
x2 <- x^2
x3 <- x^3
x4 <- x^4
lm1 <- lm(y ~ x, data = d)
lm2 <- lm(y ~ x + x2, data = d)
lm3 <- lm(y ~ x + x2 + x3, data = d)
lm4 <- lm(y ~ x + x2 + x3 + x4, data = d)
gam1 <- gam(y ~ s(x), data = d)
lines(d$x, predict(lm2), col = "yellow")
summary(lm1, lm2, lm3, lm4, gam1)
summary(lm1, lm2, lm3, lm4, gam1)
summary(lm1, lm2, lm3, lm4)
summary(gam1)
summary(lm1)
summary(lm2)
summary(lm3)
summary(lm4)
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(r, div= 2)
remainder(4, div= 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[lenght(x)]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
quit()
tsa
swirl()
plot(d)
d$x2 <- x^2
d$x3 <- x^3
head(d)
d$x4 <- x^4
d$x[1]
d$x[1]^2
head(d)
lm1
lm2
lm3
lm4
summary(lm3)
lines(lm3)
lines(d, lm3)
lines(d, predict(lm3))
lines(d$x, predict(lm3))
lm3 <- lm(y ~ x + x2 + x3, d)
lm3
lm3poly <- lm(y ~ poly(x, coefs = 3, raw = TRUE), d)
lm3poly
help("poly")
lm3poly <- lm(y ~ poly(x, 3, raw = TRUE), d)
lm3poly
summary(lm3poly)
anova(lm3, lm3poly)
coef(lm3poly)
coef(lm3)
plot(d)
plot(d$x, d$y)
anova(lm1, lm2, lm3, lm4, gam1)
summary(lm1)
summary(gam1)
summary(lm4)
d$zx <- scores(d$x2)
d$zx <- score(d$x2)
d$zx <- zscore(d$x)
d$zx <- scale(d$x, scale = TRUE)
d$zy <- scale(d$y, scale = TRUE)
plot(d$zx, d$zy)
n = 1000
r = 0.6
m1 = rnorm(n)
m2 = rnorm(n)
n1 = scale(m2) * r  +  scale(residuals(lm(m1~m2))) * sqrt(1-r*r)
cor(n1, m2)
plot(m2, n1)
r = 0.9
m1 = rnorm(n)
m2 = rnorm(n)
n1 = scale(m2) * r  +  scale(residuals(lm(m1~m2))) * sqrt(1-r*r)
plot(m2, n1)
n1 <- n1 * 100
plot(m2, n1)
m1 = rnorm(n)
m2 = rnorm(n)
n1 = scale(m2) * r  +  scale(residuals(lm(m1~m2))) * sqrt(1-r*r)
plot(m2, n1)
n1 <- n1 / 100
plot(m2, n1)
r = 0.95
m1 = rnorm(n)
m2 = rnorm(n)
n1 = scale(m2) * r  +  scale(residuals(lm(m1~m2))) * sqrt(1-r*r)
plot(m2, n1)
data("ChickWeight")
names(ChickWeight)
head(ChickWeight)
attach(ChickWeight)
plot(Time, weight)
lmc <- lm(weight ~ Time)
abline(lmc)
ChickWeight$ztime <- scale(Time, center = False, scale = TRUE)
ChickWeight$ztime <- scale(Time, center = F, scale = TRUE)
ChickWeight$zweight <- scale(weight, center = F, scale = TRUE)
plot(ztime, zweight)
attach(ChickWeight)
plot(ztime, zweight)
zweight <- zweight / 2
plot(ztime, zweight)
x1
x2
y1
y
plot(x, y)
plot(weight, Time)
plot(Time, weight)
plot(Time, weight * 3 - 5)
plot(Time, (weight * 3 - 5))
plot(Time, (weight * 8 - 5))
plot(Time, (weight^.5))
plot(Time, (weight^.3))
plot(Time, weight)
cor(Time, (weight^.3))
cor(Time, weight)
redidt
set.seed(1234567)
x1<-c(1,3,5,7,9)
x2 <- c(2,4,6,8,10)
y1 <- 3*x1 + rnorm(5,0,1)
y2 <- 10 + 6*x2 + rnorm(5,0,10)
plot(x2,y2, col="red", pch=16, xlim=c(0,10), ylim=c(0,80), xlab="x", ylab="y")
points(x1,y1, col="blue", pch=16)
abline(lm(y1~x1), col="blue")
abline(lm(y2~x2), col="red")
text(2,40,paste("Correlation =",round(cor(x2,y2), digits = 3)))
text(6,5,paste("Correlation =",round(cor(x1,y1), digits = 3)))
text(2,45,paste("Slope =",round(coef(summary(lm(y2~x2)))["x2", "Estimate"], digits = 3)))
text(6,10,paste("Slope =",round(coef(summary(lm(y1~x1)))["x1", "Estimate"], digits = 3)))
zx1 <- scale(x1, center = F)
zy1 <- scale(y1, center = F)
plot(zx1, zy1)
zx2 <- scale(x2, center = F)
zy2 <- scale(y2, center = F)
plot(zx2,zy2, col="red", pch=16, xlim=c(0,10), ylim=c(0,80), xlab="x", ylab="y")
points(zx1,zy1, col="blue", pch=16)
abline(lm(zy1~zx1), col="blue")
abline(lm(zy2~zx2), col="red")
plot(zx2,zy2, col="red", pch=16, xlim=c(0,2), ylim=c(0,2), xlab="x", ylab="y")
points(zx1,zy1, col="blue", pch=16)
abline(lm(zy1~zx1), col="blue")
abline(lm(zy2~zx2), col="red")
set.seed(1234567)
x1<-c(1,3,5,7,9)
x2 <- c(2,4,6,8,10)
y1 <- 3*x1 + rnorm(5,0,1)
y2 <- 10 + 10*x2 + rnorm(5,0,10)
plot(x2,y2, col="red", pch=16, xlim=c(0,10), ylim=c(0,80), xlab="x", ylab="y")
points(x1,y1, col="blue", pch=16)
abline(lm(y1~x1), col="blue")
abline(lm(y2~x2), col="red")
text(2,40,paste("Correlation =",round(cor(x2,y2), digits = 3)))
text(6,5,paste("Correlation =",round(cor(x1,y1), digits = 3)))
text(2,45,paste("Slope =",round(coef(summary(lm(y2~x2)))["x2", "Estimate"], digits = 3)))
text(6,10,paste("Slope =",round(coef(summary(lm(y1~x1)))["x1", "Estimate"], digits = 3)))
plot(zx2,zy2, col="red", pch=16, xlim=c(0,2), ylim=c(0,2), xlab="x", ylab="y")
points(zx1,zy1, col="blue", pch=16)
abline(lm(zy1~zx1), col="blue")
abline(lm(zy2~zx2), col="red")
summary(lm(zy1 ~ zx1))
mtcars
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg ~ wt))
lmcars <- lm(mpg ~ wt)
coef(lmcars)
corr(lmcars)
beta.coef(lmcars)
corr(mpg, tw)
cor(mpg, wt)
library(ggplot2)
ggplot(mtcars, aes(Age, Appearance Contingency))
p1 <- ggplot() + geom_line(aes(y = "Appearance Contingency", x = "Age"))
p1
age <- rnorm(100, mean = 40, sd=10)
appearanceContingency <- rnorm(100, mean = 3, sd = 0.5)
plot(age, appearanceContingency)
age <- c(18, 80)
appearance <- c(4.5, 2)
ageAppNames <- c("Age", "Appearance Contingency")
?data.frame()
fakeAgeData <- data.frame(ageAppNames, age, appearance)
head(fakeAgeData)
ggplot(data = fakeAgeData, aes(x=age, y = appearance))
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_line(x = age, y = appearance, data = fakeAgeData)
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_smooth((method = lm), x = age, y = appearance, data = fakeAgeData)
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_smooth((method = lm), aes(x=age, y = appearance), data = fakeAgeData)
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_smooth((method = lm), aes(x=age, y = appearance))
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_smooth((method = lm), x=fakeAgeData$age, y = fakeAgeData$appearance))
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_smooth((method = lm), x=fakeAgeData$age, y = fakeAgeData$appearance)
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4.5, xend = 80, yend = 2))
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5)) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1
p1 <- p1 + xlim(0, 100)
p1
p1 <- p1 + ylim(0, 5)
p1
p1 <- p1 + xlim(10, 100)
p1 <- p1 + ylim(1, 5)
p1
p1 <- p1 + xlim(10, 80)
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5, size=2, color="blue")) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5, size=2,)) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1
p1 <- p1 + xlim(10, 80)
p1 <- p1 + ylim(1, 5)
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5, size=1,)) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5), size=1,)) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_segment(aes(x = 18, y = 4, xend = 80, yend = 2.5), size=1) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p1
p1 <- p1 + ylim(1, 5)
p1 <- p1 + xlim(10, 80)
p1
p2 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 80, yend = 3.5), size=1) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p2
p2 <- p2 + ylim(1,5) + xlim(10,80)
p2
p2 <- ggtitle("Quadratic Association")
p2
p2 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 80, yend = 3.5), size=1) + ggtitle("Linear Association") + xlab("Age") + ylab("Appearance Contingency")
p2 <- p2 + ylim(1,5) + xlim(10,80)
p2 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 80, yend = 3.5), size=1) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p2 <- p2 + ylim(1,5) + xlim(10,80)
p2
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 80, yend = 3.5), size=1) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1) + geom_line(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1, curvature = 0) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = -0) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1, curvature = 0.5) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = -0.5) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1, curvature = 0.2) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = 0.2) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1, curvature = 0.3) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = 0.3) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3 <- p3 + xlim(10, 80) + ylime(1, 5)
p3 <- p3 + xlim(10, 80) + ylim(1, 5)
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4, xend = 40, yend = 3.5), size=1, curvature = 0.3) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = -0.3) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3 <- p3 + xlim(10, 80) + ylim(1, 5)
p3
p3 <- ggplot(data = fakeAgeData, aes(x=age, y = appearance)) + geom_curve(aes(x = 18, y = 4.5, xend = 40, yend = 3.5), size=1, curvature = 0.3) + geom_segment(aes(x = 40, y = 3.5, xend = 60, yend = 3.5), size=1) + geom_curve(aes(x = 60, y = 3.5, xend = 80, yend = 2.5), size=1, curvature = -0.3) + ggtitle("Quadratic Association") + xlab("Age") + ylab("Appearance Contingency")
p3 <- p3 + xlim(10, 80) + ylim(1, 5)
p3
p3 <- p3 + ggtitle("Cubic Association")
p3
?gvlma
fitM <- lm(M ~ X, data = Meddata)
# IV and M on DV; Hours since dawn and coffee predicting wakefulness
fitY <- lm(Y ~ X + M, data=Meddata)
# Data is positively skewed; could log transform
gvlma(fitM)
#### Mediation Examples
library(mediation) #Mediation package
library(multilevel) # Sobel Test
library(bda) #Another Sobel Test option
library(gvlma) #Testing Model Assumptions
library(stargazer) #Handy regression tables
library(QuantPsyc) # Quant psych package
library(pequod) # Moderated regression with extra stuff
setwd("r/Learning")
# Moderation Data
set.seed(123)
N <- 100
X <- rnorm(N, 175, 7) # IV; hours since dawn
M <- 0.7*X + rnorm(N, 0, 5) #Suspected mediator; coffee consumption
Y <- 0.4*M + rnorm(N, 0, 5) #DV; wakefulness
Meddata <- data.frame(X, M, Y)
## Method 1: Baron & Kenny
#1. Total Effect
fit <- lm(Y ~ X, data=Meddata)
summary(fit)
#2. Path A (X on M)
fita <- lm(M ~ X, data=Meddata)
summary(fita)
#3. Path B (M on Y, controlling for X)
fitb <- lm(Y ~ M + X, data=Meddata)
summary(fitb)
#4. Reversed Path C (Y on X, controlling for M)
fitc <- lm(X ~ Y + M, data=Meddata)
summary(fitc)
#Summary Table
stargazer(fit, fita, fitb, fitc, type = "text", title = "Baron and Kenny Method")
#Sobel Test - Testing if the mediation is significant
sobel(Meddata$X, Meddata$M, Meddata$Y)
#or use below; Sobel Test seen as outdated ### Couldn't find method in bda package
#mediation.test(M,X,Y)
## Using the mediation package
# IV on M; Hours since dawn predicting coffee consumption
fitM <- lm(M ~ X, data = Meddata)
# IV and M on DV; Hours since dawn and coffee predicting wakefulness
fitY <- lm(Y ~ X + M, data=Meddata)
# Data is positively skewed; could log transform
gvlma(fitM)
?gvlma
phdData <- data("AMSsurvey")
head(phdData)
phdData <- data(AMSsurvey)
head(phdData)
phdData <- data(AMSsurvey)
head(phdData)
phdData
phdData <- AMSsurvey
phdData
?AMSsurvey
fitPhd <- lm(count ~ sex)
gvlma(fitPhd)
attach(phdData)
fitPhd <- lm(count ~ sex)
gvlma(fitPhd)
# Gives assumption checking of a linear model
gvlma(fitY)
fitMed <- mediate(fitM, fitY, treat="X", mediator="M")
summary(fitMed)
